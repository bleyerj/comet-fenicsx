Traceback (most recent call last):
  File "/home/bleyerj/.local/lib/python3.12/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/home/bleyerj/.local/lib/python3.12/site-packages/nbclient/client.py", line 1314, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/bleyerj/.local/lib/python3.12/site-packages/jupyter_core/utils/__init__.py", line 165, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/asyncio/base_events.py", line 687, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "/home/bleyerj/.local/lib/python3.12/site-packages/nbclient/client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "/home/bleyerj/.local/lib/python3.12/site-packages/nbclient/client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/home/bleyerj/.local/lib/python3.12/site-packages/nbclient/client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import numpy as np
from mpi4py import MPI
import ufl
import dolfinx.fem.petsc
from dolfinx import fem, mesh

domain = mesh.create_unit_square(
    MPI.COMM_WORLD, 1, 1, cell_type=mesh.CellType.quadrilateral
)

for order in range(1, 3):
    V = fem.FunctionSpace(domain, ("P", order))
    v = ufl.TestFunction(V)
    u = ufl.TrialFunction(V)

    dx = ufl.Measure("dx", domain=domain)
    dx_lumped = dx(metadata={"quadrature_rule": "GLL", "quadrature_degree": order})
    mass_form = v * u * dx
    lumped_mass_form = v * u * dx_lumped

    M_consistent = fem.assemble_matrix(fem.form(mass_form))
    print(
        "Consistent mass matrix:\n", np.array_str(M_consistent.to_dense(), precision=3)
    )

    M_lumped = fem.assemble_matrix(fem.form(lumped_mass_form))
    print("Lumped mass matrix:\n", np.array_str(M_lumped.to_dense(), precision=3))
------------------


[0;31m---------------------------------------------------------------------------[0m
[0;31mTypeError[0m                                 Traceback (most recent call last)
Cell [0;32mIn[1], line 12[0m
[1;32m      7[0m domain [38;5;241m=[39m mesh[38;5;241m.[39mcreate_unit_square(
[1;32m      8[0m     MPI[38;5;241m.[39mCOMM_WORLD, [38;5;241m1[39m, [38;5;241m1[39m, cell_type[38;5;241m=[39mmesh[38;5;241m.[39mCellType[38;5;241m.[39mquadrilateral
[1;32m      9[0m )
[1;32m     11[0m [38;5;28;01mfor[39;00m order [38;5;129;01min[39;00m [38;5;28mrange[39m([38;5;241m1[39m, [38;5;241m3[39m):
[0;32m---> 12[0m     V [38;5;241m=[39m [43mfem[49m[38;5;241;43m.[39;49m[43mFunctionSpace[49m[43m([49m[43mdomain[49m[43m,[49m[43m [49m[43m([49m[38;5;124;43m"[39;49m[38;5;124;43mP[39;49m[38;5;124;43m"[39;49m[43m,[49m[43m [49m[43morder[49m[43m)[49m[43m)[49m
[1;32m     13[0m     v [38;5;241m=[39m ufl[38;5;241m.[39mTestFunction(V)
[1;32m     14[0m     u [38;5;241m=[39m ufl[38;5;241m.[39mTrialFunction(V)

[0;31mTypeError[0m: FunctionSpace.__init__() missing 1 required positional argument: 'cppV'

